Array and string question both test question contain it.
----------------------------------------------------------------------

Q1. Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the nonzero elements.
Ans7.
#include<bits/stdc++.h>
using namespace std;
int main() {
int n;
cout << "Enter the number of elements in the array: ";
cin>>n>>endl;

vector<int> nums(n);
cout << "Enter the elements of the array: ";
    for (int i = 0; i < n; i++) {
        cin >> nums[i];
    }
int nonzero=0;
    for (int i = 0; i < nums.size(); i++) {
        if(nums[i]!=0){
          nums[nonzero]=nums[i];
          nonzero++;
        }
    }
 while (nonzero < n) {
        nums[nonzero] = 0;
        nonzero++;
    }
for(int i=0;i<n;i++)
{
cout<<nums[i];
}
return 0;
}
OUTPUT:
Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]

##############################################################################################################
Q=> First Unique character

#include<bits/stdc++.h>
using namespace std;

int firstUniqChar(string s) {
    unordered_map<char, int> countMap;
    
    // Count the frequency of each character
    for (char ch : s) {
        countMap[ch]++;
    }
    
    // Find the first character with frequency 1
    for (int i = 0; i < s.length(); i++) {
        if (countMap[s[i]] == 1) {
            return i;
        }
    }
    
    return -1;  // No non-repeating character found
}

int main() {
   string s;
    cout << "Enter a string: ";
    cin >> s;

    int index = firstUniqChar(s);
    cout << "Index of the first non-repeating character: " << index << endl;
    
    return 0;
}
